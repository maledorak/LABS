echo "===== Loading .bashrc ====="
# Run base shell "rc-base" config
source ~/.rc-base

# Enable vim mode in bash with <ESCAPE> key.
# set -o vi

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

PS1='[\u@\h \W]\$ '

# bash-completion
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Powerline for ubuntu
#if [ -f /usr/share/powerline/bindings/bash/powerline.sh ]; then
#    source /usr/share/powerline/bindings/bash/powerline.sh
#fi

# Powerline for arch
powerline-daemon -q
POWERLINE_BASH_CONTINUATION=1
POWERLINE_BASH_SELECT=1
if [ -f /usr/lib/python3.6/site-packages/powerline/bindings/bash/powerline.sh ]; then
    source /usr/lib/python3.6/site-packages/powerline/bindings/bash/powerline.sh
fi

# Set venvsetup config
if [ -f ~/opt/venvsetup/venvsetup.sh ]; then
    source ~/opt/venvsetup/venvsetup.sh
fi

# Set nvm config
export NVM_DIR="$HOME/.nvm"
if [ -f $NVM_DIR ]; then
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi
